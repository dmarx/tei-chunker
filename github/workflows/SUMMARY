---
File: .github/workflows/docker.yml
---
# .github/worfklows/docker.yml
name: Publish Docker Image

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}



---
File: .github/workflows/llamero.yml
---
name: Llamero Summarization

on:
  #push:
  workflow_dispatch:

jobs:
  generate-summaries:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install llamero
      run: pip install llamero

    - name: Generate summaries
      run: llamero summarize all



---
File: .github/workflows/publish.yaml
---
# .github/workflows/publish.yaml
name: Publish Package

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # For PyPI trusted publishing
      contents: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          
      - name: Set version from release
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "__version__ = \"$VERSION\"" > tei_chunker/__about__.py
          
      - name: Build package
        run: python -m build
        
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1



---
File: .github/workflows/test.yml
---
name: Tests

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      
      - name: Format with black
        run: black tei_chunker tests

      - name: Auto-fix linting issues with ruff
        run: |
          ruff check --fix --exit-zero .
      
      - name: Commit auto-fix changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "style: auto-fix linting issues with ruff"
          file_pattern: "**/*.{py,md,yml}"  # adjust as needed
      
      - name: Run type checking (informational)
        continue-on-error: true
        run: |
          echo "=== mypy Type Check Report ===" >> $GITHUB_STEP_SUMMARY
          mypy tei_chunker --pretty | tee -a $GITHUB_STEP_SUMMARY || true
      
      - name: Run linting (informational)
        continue-on-error: true
        run: |
          echo "=== Ruff Lint Report ===" >> $GITHUB_STEP_SUMMARY
          ruff check tei_chunker | tee -a $GITHUB_STEP_SUMMARY || true
      
      - name: Run tests
        run: |
          pytest tests/ --cov=tei_chunker


